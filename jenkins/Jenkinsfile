pipeline {
    agent any
    
    parameters { 
         string(name: 'region', defaultValue: 'us-east-2', description: 'AWS Region')
         string(name: 'repo', defaultValue: '459966755614.dkr.ecr.us-east-2.amazonaws.com', description: 'ECR url')

    } 

    triggers {
         pollSCM('* * * * *') // Polling Source Control
     }

stages{
        stage('Build'){              // build docker images
            steps {
                echo "Building images ... "

                sh 'docker build -t mediawiki ./containerstuff/mediawiki'
                sh 'docker build -t wikidb ./containerstuff/database/'

            }
        }
        stage ('Deploy to ECR'){     // deploy to aws registry
            steps {
                sh "\$(aws ecr get-login --no-include-email --region ${params.region})"
                sh "docker tag wikidb:latest ${params.repo}/wikidb:latest"
                sh "docker push ${params.repo}/wikidb:latest"
                sh "docker tag mediawiki:latest ${params.repo}/mediawiki:latest"
                sh "docker push ${params.repo}/mediawiki:latest"
            }
        }

        stage ('Deployments'){
            parallel{

                stage ("Deploy to Dev"){
                    steps {
                        sh "kubectl apply -n dev -f ./k8s/mediawiki/deployment.yaml"
                        sh "kubectl apply -n dev -f ./k8s/mediawiki/service.yaml"
                        sh "kubectl apply -n dev -f ./k8s/wikidb/deployment.yaml"
                        sh "kubectl apply -n dev -f ./k8s/wikidb/service.yaml"                        
                    }
                 }
                stages {
                    stage('Input') {
                        steps {
                            input('Do you want to proceed?')
                        }
                    }
            
                    stage('If Proceed is clicked') {
                        steps {
                            print('hello')
                        }
                    }
                }
                // stage ("Deploy to Prod"){
                //     steps {
                //         sh "kubectl apply -n prod -f ./k8s/mediawiki/deployment.yaml"
                //         sh "kubectl apply -n prod -f ./k8s/mediawiki/service.yaml"
                //         sh "kubectl apply -n prod -f ./k8s/wikidb/deployment.yaml"
                //         sh "kubectl apply -n prod -f ./k8s/wikidb/service.yaml"
                //     }
                // }
            }
        }
    }
}